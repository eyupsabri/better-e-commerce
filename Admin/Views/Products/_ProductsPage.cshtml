@model IPagedList<ProductResponse>

@{
    var sortAsc =  (bool)((IDictionary<String, Object>)Model.filterValues)["sortAsc"];
    bool sortAscJs = !sortAsc;
    string? sortBy = String.Empty;
    if (((IDictionary<String, Object>)Model.filterValues).ContainsKey("sortBy"))
        sortBy = (string)((IDictionary<String, Object>)Model.filterValues)["sortBy"];
}

@Html.Partial("_PagingComponent", Model)

<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-bag-fill" viewBox="0 0 16 16">
    <path d="M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5z" />
</svg>


<div class="grid-table">
    <span><strong>Row</strong></span>
    <span>

        <button data-sortby="productName" class="mySort" type="button">
            <strong>Product Name</strong>
            @if (sortBy.Equals("productName"))
            {
                if (sortAsc)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-arrow-up-short" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5z" />
                    </svg>
                }
                else
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-short" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z" />
                    </svg>
                }
            }
            
        </button>

    </span>
    <span><strong>Product Description</strong></span>
    <span>
        <button data-sortby="productPrice" class="mySort" type="button">
            <strong>Product Price</strong>
            @if (sortBy.Equals("productPrice"))
            {
                if (sortAsc)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-arrow-up-short" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5z" />
                    </svg>
                }
                else
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-short" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z" />
                    </svg>
                }
            }
            
        </button>
    </span>
    <span><strong>Save</strong></span>
    <span><strong>Remove</strong></span>

</div>

@foreach (ProductResponse product in Model)
{
    <div id="productContainer_@product.ProductId">
        @Html.Partial("_OneProduct", product.ToProductUpdateReq())
    </div>
}





<script>
    $(function () {
        //$(".ajax-form").submit(function (e) {

        //    var button = $(document.activeElement).attr('class');
        //    var buttonId = $(document.activeElement).attr('id');
        //    console.log(button + buttonId)



        //    if(button == "button-save"){
        //        var values = {};
        //        var updateTargetId = $("[data-update]", $(this)).val();
        //        console.log(updateTargetId);
        //        var $inputs = $("input", $(this));
        //        $inputs.each(function () {
        //            values[this.name] = $(this).val();
        //        });
        //        var url = $(this).attr("action");
        //        $.ajax({
        //            url: url,
        //            method: "post",
        //            data: {
        //                ...values
        //            },
        //            success: function (data) {
        //                $(updateTargetId).html(data);
        //                alert("İşlem Başarılı!");
        //            }

        //        });
        //    }else {
        //        var dic = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.filterValues))
        //        var pageIndex = @Model.PageIndex;
        //        var ProductIdToBeRemoved = $(document.activeElement).data("productid");
        //        var CategoryIdToBeRemoved = $(document.activeElement).data("categoryid");
        //        console.log(ProductIdToBeRemoved)
        //        $.ajax({
        //            url: "@Url.Action("RemoveProduct","Products")",
        //            method: "post",
        //            data:
        //            {
        //                pageIndex: pageIndex,
        //                ProductIdToBeRemoved,
        //                CategoryIdToBeRemoved,
        //                ...dic

        //            },
        //            success: function (data) {
        //                console.log(dic)
        //                $("#ProductsPageContainer").html(data);
        //            }
        //        })
        //    }




        //});

        $("#ProductsPageContainer").on("click", ".button-save", function () {
            var ProductId = $(this).data("productid");

            var form = $("#productFormContainer_" + ProductId);

            form.removeData("validator");
            form.removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);



            var $inputs = $('#productFormContainer_' + ProductId + ' :input');
            var values = {};
            $inputs.each(function () {
                values[this.name] = $(this).val();
            });


            form.validate();
            console.log(form.valid());


            if (form.valid()) {
                if (window.confirm('Emin misin')) {
                    $.ajax({
                        url: "@Url.Action("UpdateProduct","Products")",
                        method: "post",
                        data: {
                            ...values
                        },
                        success: function (data) {

                            $("#UpdateProductSaveButton" + ProductId).animate({
                                backgroundColor: '#AAFF00'
                            }, {
                                duration: 200,
                                complete: function () {
                                    $("#productContainer_" + ProductId).html(data);
                                }
                            });


                        }
                    })
                }

            }

        });

        $("#ProductsPageContainer").on("click", ".button-remove", function () {
            var dic = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.filterValues))
                        var pageIndex = @Model.PageIndex;
            var ProductIdToBeRemoved = $(this).data("productid");
            var CategoryIdToBeRemoved = $(this).data("categoryid");

            console.log("#productFormContainer_" + ProductIdToBeRemoved);
            console.log(dic);

            var form = $("#productFormContainer_" + ProductIdToBeRemoved);

            form.removeData("validator");
            form.removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);

            form.validate();


            if (form.valid()) {
                if (window.confirm('Emin misin')) {
                    $.ajax({
                        url: "@Url.Action("RemoveProduct","Products")",
                        method: "post",
                        data: {
                            pageIndex: pageIndex,
                            ProductIdToBeRemoved: ProductIdToBeRemoved,
                            CategoryIdToBeRemoved: CategoryIdToBeRemoved,
                            ...dic
                        },
                        success: function (data) {
                            $("#ProductsPageContainer").off("click", ".button-save");
                            $("#ProductsPageContainer").off("click", ".button-remove");
                            $("#ProductsPageContainer").html(data);

                        }
                    })
                }

            }

        });

        $(".myPagination").click(function () {
            var pageIndex = $(this).data("pagenumber");

            var dic = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.filterValues))

                $.ajax({
                    url: "@Url.Action("Index","Products")",
                    method: "post",
                    data:
                    {
                        pageIndex: pageIndex,
                        ...dic

                    },
                    success: function (data) {

                        $("#ProductsPageContainer").off("click", ".button-save");
                        $("#ProductsPageContainer").off("click", ".button-remove");
                        $("#ProductsPageContainer").html(data);
                    }
                })
        });

        $(".mySort").click(function () {

            var sortBy = $(this).data("sortby");
            var sortAsc = "@sortAscJs";
            
            if("@sortBy" !== sortBy)
                sortAsc = true;
                
            var dic = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.filterValues))

                $.ajax({
                    url: "@Url.Action("Index","Products")",
                    method: "post",
                    data:
                    {
                        ...dic,
                        sortBy: sortBy,
                        sortAsc: sortAsc
                    },
                    success: function (data) {

                        $("#ProductsPageContainer").off("click", ".button-save");
                        $("#ProductsPageContainer").off("click", ".button-remove");
                        $("#ProductsPageContainer").html(data);
                    }
                })
        });



    });
</script>
@*$("#ProductsPageContainer").on("click", ".button-save", function () {
        var ProductId = $(this).data("productid");
        console.log("#UpdateProductForm" + ProductId);
        var form = $("#UpdateProductForm" + ProductId);

        form.removeData("validator");
        form.removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse(form);



        var $inputs = $('#UpdateProductForm' + ProductId + ' :input');
        var values = {};
        $inputs.each(function () {
            values[this.name] = $(this).val();
        });

        form.validate();
        console.log(form.valid());
        if (form.valid()) {
            $.ajax({
                url: "@Url.Action("UpdateProduct","Products")",
                method: "post",
                data: {
                    ProductId: ProductId,
                    ...values
                },
                success: function (data) {

                    $("#UpdateProductSaveButton" + ProductId).animate({
                        backgroundColor: '#AAFF00'
                    }, {
                        duration: 200,
                        complete: function () {
                            $("#UpdateProductForm" + ProductId).html(data);
                        }
                    });


                }
            })
        }

    });*@









@*


@if (Model.CurrentSearchString != null)
{
    <script>
        $(function () {

            $(".myPagination").click(function () {
                var pageNumber = $(this).data("pagenumber");
                console.log(pageNumber)
                $.ajax({
                    url: "@Url.Action("SearchProductByNameWithPagination","Products")",
                    method: "post",
                    data: {
                        pageNumber: pageNumber,
                        searchString: "@(Model.CurrentSearchString)",
                    },
                    success: function (data) {
                        $("#ProductsPageContainer").off("click", ".button-save");
                        $("#ProductsPageContainer").off("click", ".button-remove");
                        $("#ProductsPageContainer").html(data);
                    }
                })
            })


            $("#ProductsPageContainer").on("click", ".button-remove", function () {

                var ProductId = $(this).data("productid");
                var categoryid = $(this).data("categoryid");

                var searchString = @Model.CurrentSearchString;
                var pageNumber = @Model.CurrentPage;


                $.ajax({
                    url: "@Url.Action("RemoveProduct","Products")",
                    method: "post",
                    data: {
                        productId: ProductId,
                        searchString: searchString,
                        pageNumber: pageNumber,
                        categoryId: categoryid
                    },
                    success: function (data) {
                        try {
                            var response = jQuery.parseJSON(data);
                            if (typeof response == 'object') {
                                window.location.href = window.location.origin + "/home"
                            }
                        } catch (err) {

                            $("#UpdateProductRemoveButton" + ProductId).animate({
                                backgroundColor: '#FF2400'
                            }, {
                                duration: 200,
                                complete: function () {
                                    $("#ProductsPageContainer").html(data);
                                }
                            });



                        }

                    }
                })


            });





        })


    </script>
}
else
{
    <script>
        $(function () {
            $(".myPagination").click(function () {
                var pageNumber = $(this).data("pagenumber");
                console.log(pageNumber)
                $.ajax({
                    url: "@Url.Action("PaginatedProducts","Products")",
                    method: "post",
                    data: {
                        pageNumber: pageNumber,
                        categoryId: @Model.CategoryId,
                    },
                    success: function (data) {
                        $("#ProductsPageContainer").off("click", ".button-save")
                        $("#ProductsPageContainer").off("click", ".button-remove");
                        $("#ProductsPageContainer").html(data);
                    }
                })
            })




            $("#ProductsPageContainer").on("click", ".button-remove", function () {

                var ProductId = $(this).data("productid");
                var categoryId = $(this).data("categoryid");

                var pageNumber = @Model.CurrentPage;


                $.ajax({
                    url: "@Url.Action("RemoveProduct","Products")",
                    method: "post",
                    data: {
                        productId: ProductId,
                        categoryId: categoryId,
                        pageNumber: pageNumber

                    },
                    success: function (data) {
                        try {
                            var response = jQuery.parseJSON(data);
                            if (typeof response == 'object') {
                                window.location.href = window.location.origin + "/home"
                            }
                        } catch (err) {
                            $("#UpdateProductRemoveButton" + ProductId).animate({
                                backgroundColor: '#FF2400'
                            }, {
                                duration: 200,
                                complete: function () {
                                    $("#ProductsPageContainer").html(data);
                                }
                            });
                        }

                    }
                })

            });


        })

    </script>
}


*@